
import { Scenario } from '../../types'; // This path should now be correct

export const generalScenarios: Scenario[] = [
  {
    id: 'tractor_cereales',
    problemTextTemplate: (n1, n2) => `Un tractor transporta ${n1} kilos de maíz y ${n2} kilos de trigo. ¿Cuántos kilos de cereal transporta en total?`,
    operation: '+',
    data1Label: 'De maíz',
    data1Unit: 'kilos',
    data2Label: 'De trigo',
    data2Unit: 'kilos',
    resultLabelTemplate: (res) => `El tractor transporta ${res} kilos de cereal en total.`,
    icon: '🚜',
  },
  {
    id: 'pasajeros_colectivo_suben',
    problemTextTemplate: (n1, n2) => `En un colectivo viajan ${n1} pasajeros. En la primera parada, suben ${n2} pasajeros más. ¿Cuántos pasajeros hay ahora en el colectivo?`,
    operation: '+',
    data1Label: 'Pasajeros iniciales',
    data1Unit: 'pasajeros',
    data2Label: 'Suben en parada',
    data2Unit: 'pasajeros',
    resultLabelTemplate: (res) => `Ahora hay ${res} pasajeros en el colectivo.`,
    icon: '🚌',
  },
  {
    id: 'pasajeros_colectivo_bajan',
    problemTextTemplate: (n1, n2) => `Un colectivo lleva ${n1} pasajeros. En una parada se bajan ${n2} pasajeros. ¿Cuántos pasajeros quedan en el colectivo?`,
    operation: '-',
    data1Label: 'Pasajeros había',
    data1Unit: 'pasajeros',
    data2Label: 'Pasajeros bajan',
    data2Unit: 'pasajeros',
    resultLabelTemplate: (res) => `Quedan ${res} pasajeros en el colectivo.`,
    icon: '🚌',
  },
  {
    id: 'galletas_caja',
    problemTextTemplate: (n1, n2) => `María tenía ${n1} galletas en una caja. Si se comió ${n2} galletas, ¿cuántas galletas le quedan?`,
    operation: '-',
    data1Label: 'Galletas tenía',
    data1Unit: 'galletas',
    data2Label: 'Galletas comió',
    data2Unit: 'galletas',
    resultLabelTemplate: (res) => `A María le quedan ${res} galletas.`,
    icon: '🍪',
  },
  {
    id: 'libros_estanteria_general',
    problemTextTemplate: (n1, n2) => `En una estantería hay ${n1} libros de cuentos y ${n2} libros de ciencia. ¿Cuántos libros hay en total en la estantería?`,
    operation: '+',
    data1Label: 'Libros de cuentos',
    data1Unit: 'libros',
    data2Label: 'Libros de ciencia',
    data2Unit: 'libros',
    resultLabelTemplate: (res) => `En la estantería hay ${res} libros en total.`,
    icon: '📚',
  },
  {
    id: 'plata_ahorrada_gasta',
    problemTextTemplate: (n1, n2) => `Laura tenía ${n1} pesos ahorrados. Si gastó ${n2} pesos en un juguete, ¿cuánta plata le queda?`,
    operation: '-',
    data1Label: 'Plata ahorrada',
    data1Unit: 'pesos',
    data2Label: 'Plata gastada',
    data2Unit: 'pesos',
    resultLabelTemplate: (res) => `A Laura le quedan ${res} pesos.`,
    icon: '💰',
  },
  {
    id: 'plata_recibe_total',
    problemTextTemplate: (n1, n2) => `Carlos tiene ${n1} pesos en su alcancía. Su abuela le da ${n2} pesos por su cumpleaños. ¿Cuánta plata tiene ahora Carlos?`,
    operation: '+',
    data1Label: 'Plata tenía',
    data1Unit: 'pesos',
    data2Label: 'Plata recibe',
    data2Unit: 'pesos',
    resultLabelTemplate: (res) => `Carlos tiene ahora ${res} pesos.`,
    icon: '🎁',
  },
  {
    id: 'arboles_parque_plantan',
    problemTextTemplate: (n1, n2) => `En un parque había ${n1} árboles. Plantaron ${n2} árboles más. ¿Cuántos árboles hay ahora en el parque?`,
    operation: '+',
    data1Label: 'Árboles había',
    data1Unit: 'árboles',
    data2Label: 'Árboles plantaron',
    data2Unit: 'árboles',
    resultLabelTemplate: (res) => `Ahora hay ${res} árboles en el parque.`,
    icon: '🌳',
  },
  {
    id: 'arboles_parque_quitan',
    problemTextTemplate: (n1, n2) => `En un bosque había ${n1} pinos. Si se talaron ${n2} pinos, ¿cuántos pinos quedaron?`,
    operation: '-',
    data1Label: 'Pinos había',
    data1Unit: 'pinos',
    data2Label: 'Pinos talados',
    data2Unit: 'pinos',
    resultLabelTemplate: (res) => `Quedaron ${res} pinos.`,
    icon: '🌲',
  },
  {
    id: 'figuritas_album_regala',
    problemTextTemplate: (n1, n2) => `Pedro tiene un álbum con ${n1} figuritas. Su amigo le regaló ${n2} figuritas más. ¿Cuántas figuritas tiene Pedro en total?`,
    operation: '+',
    data1Label: 'Figuritas tenía',
    data1Unit: 'figuritas',
    data2Label: 'Figuritas regaladas',
    data2Unit: 'figuritas',
    resultLabelTemplate: (res) => `Pedro tiene ${res} figuritas en total.`,
    icon: '🖼️',
  },
  {
    id: 'figuritas_album_pierde',
    problemTextTemplate: (n1, n2) => `Ana tiene ${n1} figuritas repetidas. Si pierde ${n2} de ellas, ¿cuántas figuritas repetidas le quedan?`,
    operation: '-',
    data1Label: 'Figuritas repetidas',
    data1Unit: 'figuritas',
    data2Label: 'Figuritas perdidas',
    data2Unit: 'figuritas',
    resultLabelTemplate: (res) => `A Ana le quedan ${res} figuritas repetidas.`,
    icon: '🃏',
  },
  {
    id: 'flores_jardin',
    problemTextTemplate: (n1, n2) => `En un jardín florecieron ${n1} rosas rojas y ${n2} rosas blancas. ¿Cuántas rosas florecieron en total?`,
    operation: '+',
    data1Label: 'Rosas rojas',
    data1Unit: 'rosas',
    data2Label: 'Rosas blancas',
    data2Unit: 'rosas',
    resultLabelTemplate: (res) => `Florecieron ${res} rosas en total.`,
    icon: '🌹',
  },
  {
    id: 'flores_marchitan',
    problemTextTemplate: (n1, n2) => `Un florero tenía ${n1} margaritas. Se marchitaron ${n2} margaritas. ¿Cuántas margaritas frescas quedan?`,
    operation: '-',
    data1Label: 'Margaritas había',
    data1Unit: 'margaritas',
    data2Label: 'Se marchitaron',
    data2Unit: 'margaritas',
    resultLabelTemplate: (res) => `Quedan ${res} margaritas frescas.`,
    icon: '🌼',
  },
  {
    id: 'piezas_rompecabezas',
    problemTextTemplate: (n1, n2) => `Un rompecabezas tiene ${n1} piezas. Si ya se han colocado ${n2} piezas, ¿cuántas piezas faltan por colocar?`,
    operation: '-',
    data1Label: 'Total piezas',
    data1Unit: 'piezas',
    data2Label: 'Piezas colocadas',
    data2Unit: 'piezas',
    resultLabelTemplate: (res) => `Faltan ${res} piezas por colocar.`,
    icon: '🧩',
  },
  {
    id: 'animales_granja',
    problemTextTemplate: (n1, n2) => `En una granja hay ${n1} gallinas y ${n2} vacas. ¿Cuántos animales de estos dos tipos hay en la granja?`,
    operation: '+',
    data1Label: 'Gallinas',
    data1Unit: 'gallinas',
    data2Label: 'Vacas',
    data2Unit: 'vacas',
    resultLabelTemplate: (res) => `Hay ${res} animales (gallinas y vacas) en la granja.`,
    icon: '🐔',
  },
  {
    id: 'peces_acuario_venden',
    problemTextTemplate: (n1, n2) => `En una tienda de mascotas había ${n1} peces en un acuario. Si vendieron ${n2} peces, ¿cuántos quedan?`,
    operation: '-',
    data1Label: 'Peces había',
    data1Unit: 'peces',
    data2Label: 'Peces vendidos',
    data2Unit: 'peces',
    resultLabelTemplate: (res) => `Quedan ${res} peces en el acuario.`,
    icon: '🐠',
  },
  {
    id: 'manzanas_cesta_compra',
    problemTextTemplate: (n1, n2) => `Una cesta tiene ${n1} manzanas rojas. Se añaden ${n2} manzanas verdes. ¿Cuántas manzanas hay ahora en la cesta?`,
    operation: '+',
    data1Label: 'Manzanas rojas',
    data1Unit: 'manzanas',
    data2Label: 'Manzanas verdes',
    data2Unit: 'manzanas',
    resultLabelTemplate: (res) => `Ahora hay ${res} manzanas en la cesta.`,
    icon: '🍎',
  },
  {
    id: 'naranjas_bolsa_come',
    problemTextTemplate: (n1, n2) => `Juan compró una bolsa con ${n1} naranjas. Si se come ${n2} naranjas, ¿cuántas le quedan?`,
    operation: '-',
    data1Label: 'Naranjas compró',
    data1Unit: 'naranjas',
    data2Label: 'Naranjas comió',
    data2Unit: 'naranjas',
    resultLabelTemplate: (res) => `A Juan le quedan ${res} naranjas.`,
    icon: '🍊',
  },
  {
    id: 'alumnos_clase',
    problemTextTemplate: (n1, n2) => `En una clase hay ${n1} nenes y ${n2} nenas. ¿Cuántos alumnos hay en total?`,
    operation: '+',
    data1Label: 'Nenes',
    data1Unit: 'alumnos',
    data2Label: 'Nenas',
    data2Unit: 'alumnas',
    resultLabelTemplate: (res) => `Hay ${res} alumnos en total en la clase.`,
    icon: '🧑‍🏫',
  },
  {
    id: 'alumnos_excursion_faltan',
    problemTextTemplate: (n1, n2) => `A una excursión iban a ir ${n1} alumnos. Si finalmente ${n2} alumnos no pudieron ir, ¿cuántos alumnos fueron a la excursión?`,
    operation: '-',
    data1Label: 'Alumnos iban',
    data1Unit: 'alumnos',
    data2Label: 'Alumnos faltaron',
    data2Unit: 'alumnos',
    resultLabelTemplate: (res) => `Fueron ${res} alumnos a la excursión.`,
    icon: '🎒',
  },
  {
    id: 'paginas_libro',
    problemTextTemplate: (n1, n2) => `Un libro tiene ${n1} páginas. Si ya he leído ${n2} páginas, ¿cuántas me faltan por leer?`,
    operation: '-',
    data1Label: 'Total páginas',
    data1Unit: 'páginas',
    data2Label: 'Páginas leídas',
    data2Unit: 'páginas',
    resultLabelTemplate: (res) => `Me faltan ${res} páginas por leer.`,
    icon: '📖',
  },
  {
    id: 'canicas_bolsa_gana',
    problemTextTemplate: (n1, n2) => `Luis tiene ${n1} canicas en una bolsa. Jugando con un amigo, gana ${n2} canicas más. ¿Cuántas canicas tiene ahora Luis?`,
    operation: '+',
    data1Label: 'Canicas tenía',
    data1Unit: 'canicas',
    data2Label: 'Canicas ganó',
    data2Unit: 'canicas',
    resultLabelTemplate: (res) => `Luis tiene ahora ${res} canicas.`,
    icon: '🔮', 
  },
  {
    id: 'globos_fiesta_explotan',
    problemTextTemplate: (n1, n2) => `Para una fiesta se inflaron ${n1} globos. Si se explotaron ${n2} globos, ¿cuántos globos quedaron inflados?`,
    operation: '-',
    data1Label: 'Globos inflados',
    data1Unit: 'globos',
    data2Label: 'Globos explotaron',
    data2Unit: 'globos',
    resultLabelTemplate: (res) => `Quedaron ${res} globos inflados.`,
    icon: '🎈',
  },
  {
    id: 'autos_estacionamiento_entran',
    problemTextTemplate: (n1, n2) => `En un estacionamiento hay ${n1} autos. Durante la mañana entran ${n2} autos más. ¿Cuántos autos hay ahora?`,
    operation: '+',
    data1Label: 'Autos había',
    data1Unit: 'autos',
    data2Label: 'Autos entran',
    data2Unit: 'autos',
    resultLabelTemplate: (res) => `Ahora hay ${res} autos en el estacionamiento.`,
    icon: '🚗',
  },
  {
    id: 'autos_estacionamiento_salen',
    problemTextTemplate: (n1, n2) => `Un estacionamiento tiene ${n1} lugares ocupados. Si salen ${n2} autos, ¿cuántos lugares ocupados quedan?`,
    operation: '-',
    data1Label: 'Lugares ocupados',
    data1Unit: 'lugares',
    data2Label: 'Autos salen',
    data2Unit: 'autos',
    resultLabelTemplate: (res) => `Quedan ${res} lugares ocupados.`,
    icon: '🅿️',
  },
  {
    id: 'lapices_estuche_pierde',
    problemTextTemplate: (n1, n2) => `Mario tenía ${n1} lápices de colores en su cartuchera. Perdió ${n2} lápices. ¿Cuántos lápices le quedan?`,
    operation: '-',
    data1Label: 'Lápices tenía',
    data1Unit: 'lápices',
    data2Label: 'Lápices perdió',
    data2Unit: 'lápices',
    resultLabelTemplate: (res) => `A Mario le quedan ${res} lápices.`,
    icon: '✏️',
  },
  {
    id: 'juguetes_caja_guarda_general', 
    problemTextTemplate: (n1, n2) => `En una caja había ${n1} juguetes. Mamá guardó ${n2} juguetes más. ¿Cuántos juguetes hay ahora en la caja?`,
    operation: '+',
    data1Label: 'Juguetes había',
    data1Unit: 'juguetes',
    data2Label: 'Juguetes guardó',
    data2Unit: 'juguetes',
    resultLabelTemplate: (res) => `Ahora hay ${res} juguetes en la caja.`,
    icon: '🧸',
  },
  {
    id: 'pajaros_arbol_vuelan',
    problemTextTemplate: (n1, n2) => `En un árbol había ${n1} pájaros cantando. Si ${n2} pájaros se fueron volando, ¿cuántos pájaros quedaron en el árbol?`,
    operation: '-',
    data1Label: 'Pájaros había',
    data1Unit: 'pájaros',
    data2Label: 'Pájaros volaron',
    data2Unit: 'pájaros',
    resultLabelTemplate: (res) => `Quedaron ${res} pájaros en el árbol.`,
    icon: '🐦',
  },
  {
    id: 'caramelos_bolsa_reparte',
    problemTextTemplate: (n1, n2) => `Una bolsa tiene ${n1} caramelos. Si se reparten ${n2} caramelos entre los amigos, ¿cuántos caramelos quedan en la bolsa?`,
    operation: '-',
    data1Label: 'Caramelos había',
    data1Unit: 'caramelos',
    data2Label: 'Caramelos repartidos',
    data2Unit: 'caramelos',
    resultLabelTemplate: (res) => `Quedan ${res} caramelos en la bolsa.`,
    icon: '🍬',
  },
  {
    id: 'fotos_album_pega',
    problemTextTemplate: (n1, n2) => `Un álbum de fotos tiene ${n1} fotos pegadas. Hoy se han pegado ${n2} fotos más. ¿Cuántas fotos tiene ahora el álbum?`,
    operation: '+',
    data1Label: 'Fotos había',
    data1Unit: 'fotos',
    data2Label: 'Fotos pegadas hoy',
    data2Unit: 'fotos',
    resultLabelTemplate: (res) => `El álbum tiene ahora ${res} fotos.`,
    icon: '📸',
  },
  {
    id: 'ovejas_rebaño_pierden',
    problemTextTemplate: (n1, n2) => `Un pastor tiene un rebaño de ${n1} ovejas. Si se le pierden ${n2} ovejas, ¿cuántas le quedan?`,
    operation: '-',
    data1Label: 'Ovejas tenía',
    data1Unit: 'ovejas',
    data2Label: 'Ovejas perdidas',
    data2Unit: 'ovejas',
    resultLabelTemplate: (res) => `Al pastor le quedan ${res} ovejas.`,
    icon: '🐑',
  },
  {
    id: 'figuritas_coleccion_consigue',
    problemTextTemplate: (n1, n2) => `En mi colección tengo ${n1} figuritas. Hoy he conseguido ${n2} figuritas nuevas. ¿Cuántas figuritas tengo ahora?`,
    operation: '+',
    data1Label: 'Figuritas tenía',
    data1Unit: 'figuritas',
    data2Label: 'Figuritas nuevas',
    data2Unit: 'figuritas',
    resultLabelTemplate: (res) => `Ahora tengo ${res} figuritas.`,
    icon: '🌟',
  },
  {
    id: 'jugos_heladera_beben',
    problemTextTemplate: (n1, n2) => `En la heladera había ${n1} jugos. Mis hermanos y yo nos hemos tomado ${n2} jugos. ¿Cuántos jugos quedan?`,
    operation: '-',
    data1Label: 'Jugos había',
    data1Unit: 'jugos',
    data2Label: 'Jugos tomados',
    data2Unit: 'jugos',
    resultLabelTemplate: (res) => `Quedan ${res} jugos en la heladera.`,
    icon: '🥤',
  },
  {
    id: 'remeras_armario_compra',
    problemTextTemplate: (n1, n2) => `En el armario tengo ${n1} remeras. Me han comprado ${n2} remeras nuevas. ¿Cuántas remeras tengo ahora?`,
    operation: '+',
    data1Label: 'Remeras tenía',
    data1Unit: 'remeras',
    data2Label: 'Remeras nuevas',
    data2Unit: 'remeras',
    resultLabelTemplate: (res) => `Ahora tengo ${res} remeras.`,
    icon: '👕',
  },
  {
    id: 'bombones_caja_come',
    problemTextTemplate: (n1, n2) => `Una caja tenía ${n1} bombones. Me he comido ${n2} bombones. ¿Cuántos bombones quedan en la caja?`,
    operation: '-',
    data1Label: 'Bombones había',
    data1Unit: 'bombones',
    data2Label: 'Bombones comidos',
    data2Unit: 'bombones',
    resultLabelTemplate: (res) => `Quedan ${res} bombones en la caja.`,
    icon: '🍫',
  },
  {
    id: 'colores_caja_añade',
    problemTextTemplate: (n1, n2) => `Una caja de pinturas tiene ${n1} colores. Si añadimos ${n2} colores más, ¿cuántos colores tendrá la caja?`,
    operation: '+',
    data1Label: 'Colores tenía',
    data1Unit: 'colores',
    data2Label: 'Colores añadidos',
    data2Unit: 'colores',
    resultLabelTemplate: (res) => `La caja tendrá ${res} colores.`,
    icon: '🎨',
  },
  {
    id: 'sillas_aula_retiran',
    problemTextTemplate: (n1, n2) => `En un aula hay ${n1} sillas. Si se retiran ${n2} sillas para limpiarlas, ¿cuántas sillas quedan en el aula?`,
    operation: '-',
    data1Label: 'Sillas había',
    data1Unit: 'sillas',
    data2Label: 'Sillas retiradas',
    data2Unit: 'sillas',
    resultLabelTemplate: (res) => `Quedan ${res} sillas en el aula.`,
    icon: '🪑',
  },
  {
    id: 'barcos_puerto_llegan',
    problemTextTemplate: (n1, n2) => `En un puerto hay ${n1} barcos. Si llegan ${n2} barcos más, ¿cuántos barcos hay ahora en el puerto?`,
    operation: '+',
    data1Label: 'Barcos había',
    data1Unit: 'barcos',
    data2Label: 'Barcos llegan',
    data2Unit: 'barcos',
    resultLabelTemplate: (res) => `Ahora hay ${res} barcos en el puerto.`,
    icon: '⛵',
  },
  {
    id: 'aviones_aeropuerto_despegan',
    problemTextTemplate: (n1, n2) => `En un aeropuerto hay ${n1} aviones listos para volar. Si despegan ${n2} aviones, ¿cuántos quedan en tierra?`,
    operation: '-',
    data1Label: 'Aviones listos',
    data1Unit: 'aviones',
    data2Label: 'Aviones despegan',
    data2Unit: 'aviones',
    resultLabelTemplate: (res) => `Quedan ${res} aviones en tierra.`,
    icon: '✈️',
  },
  {
    id: 'herramientas_caja_añade',
    problemTextTemplate: (n1, n2) => `Papá tiene una caja con ${n1} herramientas. Si compra ${n2} herramientas más, ¿cuántas tendrá ahora?`,
    operation: '+',
    data1Label: 'Herramientas tenía',
    data1Unit: 'herramientas',
    data2Label: 'Herramientas compró',
    data2Unit: 'herramientas',
    resultLabelTemplate: (res) => `Papá tendrá ahora ${res} herramientas.`,
    icon: '🛠️',
  },
  {
    id: 'tornillos_caja_usa',
    problemTextTemplate: (n1, n2) => `Una caja contiene ${n1} tornillos. Si se usan ${n2} tornillos para un mueble, ¿cuántos quedan?`,
    operation: '-',
    data1Label: 'Tornillos había',
    data1Unit: 'tornillos',
    data2Label: 'Tornillos usados',
    data2Unit: 'tornillos',
    resultLabelTemplate: (res) => `Quedan ${res} tornillos en la caja.`,
    icon: '🔩',
  },
   {
    id: 'perros_parque_llegan',
    problemTextTemplate: (n1, n2) => `En el parque están jugando ${n1} perros. Si llegan ${n2} perros más, ¿cuántos perros hay jugando ahora?`,
    operation: '+',
    data1Label: 'Perros jugando',
    data1Unit: 'perros',
    data2Label: 'Perros llegan',
    data2Unit: 'perros',
    resultLabelTemplate: (res) => `Ahora hay ${res} perros jugando en el parque.`,
    icon: '🐕',
  },
  {
    id: 'gatos_casa_adoptan',
    problemTextTemplate: (n1, n2) => `En una casa viven ${n1} gatos. Si la familia adopta ${n2} gatos más, ¿cuántos gatos viven ahora en la casa?`,
    operation: '+',
    data1Label: 'Gatos vivían',
    data1Unit: 'gatos',
    data2Label: 'Gatos adoptan',
    data2Unit: 'gatos',
    resultLabelTemplate: (res) => `Ahora viven ${res} gatos en la casa.`,
    icon: '🐈',
  },
  {
    id: 'nubes_cielo_desaparecen',
    problemTextTemplate: (n1, n2) => `Por la mañana había ${n1} nubes en el cielo. Al mediodía, ${n2} nubes se habían disipado. ¿Cuántas nubes quedan?`,
    operation: '-',
    data1Label: 'Nubes había',
    data1Unit: 'nubes',
    data2Label: 'Nubes disipadas',
    data2Unit: 'nubes',
    resultLabelTemplate: (res) => `Quedan ${res} nubes en el cielo.`,
    icon: '☁️',
  },
  {
    id: 'estrellas_noche_cuento',
    problemTextTemplate: (n1, n2) => `Anoche conté ${n1} estrellas brillantes. Luego, conté otras ${n2} estrellas más débiles. ¿Cuántas estrellas conté en total?`,
    operation: '+',
    data1Label: 'Estrellas brillantes',
    data1Unit: 'estrellas',
    data2Label: 'Estrellas débiles',
    data2Unit: 'estrellas',
    resultLabelTemplate: (res) => `Conté ${res} estrellas en total.`,
    icon: '🌠',
  },
  {
    id: 'botellas_agua_reciclan',
    problemTextTemplate: (n1, n2) => `En una semana, una familia juntó ${n1} botellas de plástico para reciclar. La semana siguiente, juntaron ${n2} botellas. ¿Cuántas botellas juntaron en total?`,
    operation: '+',
    data1Label: 'Botellas semana 1',
    data1Unit: 'botellas',
    data2Label: 'Botellas semana 2',
    data2Unit: 'botellas',
    resultLabelTemplate: (res) => `Juntaron ${res} botellas en total.`,
    icon: '♻️',
  },
  {
    id: 'hojas_cuaderno_arranca',
    problemTextTemplate: (n1, n2) => `Mi cuaderno tenía ${n1} hojas. Arranqué ${n2} hojas para hacer un dibujo. ¿Cuántas hojas le quedan al cuaderno?`,
    operation: '-',
    data1Label: 'Hojas tenía',
    data1Unit: 'hojas',
    data2Label: 'Hojas arrancadas',
    data2Unit: 'hojas',
    resultLabelTemplate: (res) => `Al cuaderno le quedan ${res} hojas.`,
    icon: '🗒️',
  },
  {
    id: 'huevos_carton_usan',
    problemTextTemplate: (n1, n2) => `Un maple de huevos tiene ${n1} huevos. Si usamos ${n2} para hacer una tortilla, ¿cuántos huevos quedan?`,
    operation: '-',
    data1Label: 'Huevos había',
    data1Unit: 'huevos',
    data2Label: 'Huevos usados',
    data2Unit: 'huevos',
    resultLabelTemplate: (res) => `Quedan ${res} huevos en el maple.`,
    icon: '🥚',
  },
  {
    id: 'tren_vagones_añaden',
    problemTextTemplate: (n1, n2) => `Un tren tiene ${n1} vagones. En la estación le añaden ${n2} vagones más. ¿Cuántos vagones tiene ahora el tren?`,
    operation: '+',
    data1Label: 'Vagones tenía',
    data1Unit: 'vagones',
    data2Label: 'Vagones añadidos',
    data2Unit: 'vagones',
    resultLabelTemplate: (res) => `El tren tiene ahora ${res} vagones.`,
    icon: '🚆',
  },
  {
    id: 'puntos_juego_gana',
    problemTextTemplate: (n1, n2) => `En un videojuego, tenías ${n1} puntos y ganaste ${n2} puntos más. ¿Cuántos puntos tienes ahora?`,
    operation: '+',
    data1Label: 'Puntos iniciales', data1Unit: 'puntos',
    data2Label: 'Puntos ganados', data2Unit: 'puntos',
    resultLabelTemplate: (res) => `Ahora tienes ${res} puntos.`,
    icon: '🎯',
  },
  {
    id: 'cromos_cambia',
    problemTextTemplate: (n1, n2) => `Tenías ${n1} cromos repetidos. Cambiaste ${n2} con un amigo. ¿Cuántos cromos repetidos te quedan?`,
    operation: '-',
    data1Label: 'Cromos repetidos', data1Unit: 'cromos',
    data2Label: 'Cromos cambiados', data2Unit: 'cromos',
    resultLabelTemplate: (res) => `Te quedan ${res} cromos repetidos.`,
    icon: '✨',
  },
  {
    id: 'paginas_libro_lunes_martes',
    problemTextTemplate: (n1, n2) => `Sofía leyó ${n1} páginas de un libro el lunes y ${n2} páginas el martes. ¿Cuántas páginas leyó en total?`,
    operation: '+',
    data1Label: 'Páginas lunes', data1Unit: 'páginas',
    data2Label: 'Páginas martes', data2Unit: 'páginas',
    resultLabelTemplate: (res) => `Sofía leyó ${res} páginas en total.`,
    icon: '📚',
  },
  {
    id: 'ovejas_granjero_vende',
    problemTextTemplate: (n1, n2) => `Un granjero tenía ${n1} ovejas y vendió ${n2}. ¿Cuántas ovejas le quedan?`,
    operation: '-',
    data1Label: 'Ovejas tenía', data1Unit: 'ovejas',
    data2Label: 'Ovejas vendió', data2Unit: 'ovejas',
    resultLabelTemplate: (res) => `Al granjero le quedan ${res} ovejas.`,
    icon: '🐑',
  },
  {
    id: 'flores_jardin_rojas_amarillas',
    problemTextTemplate: (n1, n2) => `En un jardín hay ${n1} flores rojas y ${n2} flores amarillas. ¿Cuántas flores hay en total?`,
    operation: '+',
    data1Label: 'Flores rojas', data1Unit: 'flores',
    data2Label: 'Flores amarillas', data2Unit: 'flores',
    resultLabelTemplate: (res) => `En el jardín hay ${res} flores en total.`,
    icon: '🌷',
  },
  {
    id: 'caramelos_pablo_regala',
    problemTextTemplate: (n1, n2) => `Pablo tenía ${n1} caramelos y regaló ${n2} a su amigo. ¿Cuántos caramelos le quedan?`,
    operation: '-',
    data1Label: 'Caramelos tenía', data1Unit: 'caramelos',
    data2Label: 'Caramelos regaló', data2Unit: 'caramelos',
    resultLabelTemplate: (res) => `A Pablo le quedan ${res} caramelos.`,
    icon: '🍬',
  },
  {
    id: 'goles_futbol_equipo',
    problemTextTemplate: (n1, n2) => `Un equipo de fútbol marcó ${n1} goles en el primer tiempo y ${n2} goles en el segundo. ¿Cuántos goles marcó en total?`,
    operation: '+',
    data1Label: 'Goles 1er tiempo', data1Unit: 'goles',
    data2Label: 'Goles 2do tiempo', data2Unit: 'goles',
    resultLabelTemplate: (res) => `El equipo marcó ${res} goles en total.`,
    icon: '⚽',
  },
  {
    id: 'pajaros_arbol_vuelan_lejos',
    problemTextTemplate: (n1, n2) => `Había ${n1} pájaros en un árbol. Si ${n2} volaron lejos, ¿cuántos quedaron?`,
    operation: '-',
    data1Label: 'Pájaros había', data1Unit: 'pájaros',
    data2Label: 'Pájaros volaron', data2Unit: 'pájaros',
    resultLabelTemplate: (res) => `Quedaron ${res} pájaros en el árbol.`,
    icon: '🐦',
  },
  {
    id: 'lapices_caja_azules_rojos',
    problemTextTemplate: (n1, n2) => `En una caja hay ${n1} lápices azules y ${n2} lápices rojos. ¿Cuántos lápices hay en total?`,
    operation: '+',
    data1Label: 'Lápices azules', data1Unit: 'lápices',
    data2Label: 'Lápices rojos', data2Unit: 'lápices',
    resultLabelTemplate: (res) => `Hay ${res} lápices en total en la caja.`,
    icon: '✏️',
  },
  {
    id: 'torta_porciones_comidas',
    problemTextTemplate: (n1, n2) => `Una torta tenía ${n1} porciones. Se comieron ${n2} porciones. ¿Cuántas porciones de torta quedan?`,
    operation: '-',
    data1Label: 'Porciones había', data1Unit: 'porciones',
    data2Label: 'Porciones comidas', data2Unit: 'porciones',
    resultLabelTemplate: (res) => `Quedan ${res} porciones de torta.`,
    icon: '🍰',
  },
  {
    id: 'peces_acuario_dorados_payaso',
    problemTextTemplate: (n1, n2) => `Un acuario tiene ${n1} peces dorados y ${n2} peces payaso. ¿Cuántos peces tiene en total?`,
    operation: '+',
    data1Label: 'Peces dorados', data1Unit: 'peces',
    data2Label: 'Peces payaso', data2Unit: 'peces',
    resultLabelTemplate: (res) => `El acuario tiene ${res} peces en total.`,
    icon: '🐠',
  },
  {
    id: 'huevos_mama_compra_usa',
    problemTextTemplate: (n1, n2) => `Mamá compró ${n1} huevos y usó ${n2} para una receta. ¿Cuántos huevos le quedan?`,
    operation: '-',
    data1Label: 'Huevos compró', data1Unit: 'huevos',
    data2Label: 'Huevos usó', data2Unit: 'huevos',
    resultLabelTemplate: (res) => `A mamá le quedan ${res} huevos.`,
    icon: '🥚',
  },
  {
    id: 'figuritas_juan_animales_dinosaurios',
    problemTextTemplate: (n1, n2) => `Juan tiene ${n1} figuritas de animales y ${n2} de dinosaurios. ¿Cuántas figuritas tiene en total?`,
    operation: '+',
    data1Label: 'Figuritas animales', data1Unit: 'figuritas',
    data2Label: 'Figuritas dinosaurios', data2Unit: 'figuritas',
    resultLabelTemplate: (res) => `Juan tiene ${res} figuritas en total.`,
    icon: '🦕',
  },
  {
    id: 'estacionamiento_lugares_libres',
    problemTextTemplate: (n1, n2) => `Un estacionamiento tiene capacidad para ${n1} autos. Si hay ${n2} autos estacionados, ¿cuántos lugares libres quedan?`,
    operation: '-',
    data1Label: 'Capacidad total', data1Unit: 'lugares',
    data2Label: 'Autos estacionados', data2Unit: 'autos',
    resultLabelTemplate: (res) => `Quedan ${res} lugares libres en el estacionamiento.`,
    icon: '🅿️',
  },
  {
    id: 'globos_fiesta_azules_verdes',
    problemTextTemplate: (n1, n2) => `En una fiesta hay ${n1} globos azules y ${n2} globos verdes. ¿Cuántos globos hay en total?`,
    operation: '+',
    data1Label: 'Globos azules', data1Unit: 'globos',
    data2Label: 'Globos verdes', data2Unit: 'globos',
    resultLabelTemplate: (res) => `Hay ${res} globos en total en la fiesta.`,
    icon: '🎈',
  },
  {
    id: 'tren_pasajeros_bajan_estacion',
    problemTextTemplate: (n1, n2) => `Un tren tenía ${n1} pasajeros. En una estación bajaron ${n2}. ¿Cuántos pasajeros continúan en el tren?`,
    operation: '-',
    data1Label: 'Pasajeros había', data1Unit: 'pasajeros',
    data2Label: 'Pasajeros bajaron', data2Unit: 'pasajeros',
    resultLabelTemplate: (res) => `Continúan ${res} pasajeros en el tren.`,
    icon: '🚆',
  },
  {
    id: 'medialunas_panadero_hornea',
    problemTextTemplate: (n1, n2) => `Un panadero horneó ${n1} medialunas por la mañana y ${n2} por la tarde. ¿Cuántas medialunas horneó en total?`,
    operation: '+',
    data1Label: 'Medialunas mañana', data1Unit: 'medialunas',
    data2Label: 'Medialunas tarde', data2Unit: 'medialunas',
    resultLabelTemplate: (res) => `El panadero horneó ${res} medialunas en total.`,
    icon: '🥐',
  },
  {
    id: 'libros_aventuras_biblioteca_prestan',
    problemTextTemplate: (n1, n2) => `Una biblioteca tenía ${n1} libros de aventuras. Prestaron ${n2}. ¿Cuántos libros de aventuras quedan?`,
    operation: '-',
    data1Label: 'Libros había', data1Unit: 'libros',
    data2Label: 'Libros prestaron', data2Unit: 'libros',
    resultLabelTemplate: (res) => `Quedan ${res} libros de aventuras en la biblioteca.`,
    icon: '📚',
  },
  {
    id: 'bolas_navidad_rojas_doradas',
    problemTextTemplate: (n1, n2) => `En un árbol de Navidad hay ${n1} bolas rojas y ${n2} bolas doradas. ¿Cuántas bolas hay en total?`,
    operation: '+',
    data1Label: 'Bolas rojas', data1Unit: 'bolas',
    data2Label: 'Bolas doradas', data2Unit: 'bolas',
    resultLabelTemplate: (res) => `Hay ${res} bolas en total en el árbol.`,
    icon: '🎄',
  },
  {
    id: 'rosas_florista_vende',
    problemTextTemplate: (n1, n2) => `Un florista tenía ${n1} rosas. Vendió ${n2} rosas. ¿Cuántas le quedan?`,
    operation: '-',
    data1Label: 'Rosas tenía', data1Unit: 'rosas',
    data2Label: 'Rosas vendió', data2Unit: 'rosas',
    resultLabelTemplate: (res) => `Al florista le quedan ${res} rosas.`,
    icon: '🌹',
  },
  {
    id: 'galletas_plato_chocolate_vainilla',
    problemTextTemplate: (n1, n2) => `En un plato hay ${n1} galletas de chocolate y ${n2} de vainilla. ¿Cuántas galletas hay en total?`,
    operation: '+',
    data1Label: 'Galletas chocolate', data1Unit: 'galletas',
    data2Label: 'Galletas vainilla', data2Unit: 'galletas',
    resultLabelTemplate: (res) => `Hay ${res} galletas en total en el plato.`,
    icon: '🍪',
  },
  {
    id: 'manzanas_arbol_caen',
    problemTextTemplate: (n1, n2) => `Un árbol tenía ${n1} manzanas. Se cayeron ${n2} manzanas. ¿Cuántas quedaron en el árbol?`,
    operation: '-',
    data1Label: 'Manzanas había', data1Unit: 'manzanas',
    data2Label: 'Manzanas cayeron', data2Unit: 'manzanas',
    resultLabelTemplate: (res) => `Quedaron ${res} manzanas en el árbol.`,
    icon: '🍎',
  },
  {
    id: 'figuritas_paquetes_total',
    problemTextTemplate: (n1, n2) => `Un paquete trae ${n1} figuritas y otro paquete trae ${n2} figuritas. ¿Cuántas figuritas hay en total?`,
    operation: '+',
    data1Label: 'Figuritas paquete 1', data1Unit: 'figuritas',
    data2Label: 'Figuritas paquete 2', data2Unit: 'figuritas',
    resultLabelTemplate: (res) => `Hay ${res} figuritas en total.`,
    icon: '✨',
  },
  {
    id: 'colectivo_asientos_libres',
    problemTextTemplate: (n1, n2) => `Un colectivo salió con ${n1} asientos. Si se ocuparon ${n2} asientos, ¿cuántos quedaron libres?`,
    operation: '-',
    data1Label: 'Asientos totales', data1Unit: 'asientos',
    data2Label: 'Asientos ocupados', data2Unit: 'asientos',
    resultLabelTemplate: (res) => `Quedaron ${res} asientos libres.`,
    icon: '🚌',
  },
  {
    id: 'metros_laura_recorre',
    problemTextTemplate: (n1, n2) => `Laura corrió ${n1} metros y luego caminó ${n2} metros más. ¿Cuántos metros recorrió en total?`,
    operation: '+',
    data1Label: 'Metros corrió', data1Unit: 'metros',
    data2Label: 'Metros caminó', data2Unit: 'metros',
    resultLabelTemplate: (res) => `Laura recorrió ${res} metros en total.`,
    icon: '🏃‍♀️',
  },
  {
    id: 'agua_bidon_riego',
    problemTextTemplate: (n1, n2) => `Un bidón tenía ${n1} litros de agua. Se usaron ${n2} litros para regar. ¿Cuántos litros quedan?`,
    operation: '-',
    data1Label: 'Litros había', data1Unit: 'litros',
    data2Label: 'Litros usados', data2Unit: 'litros',
    resultLabelTemplate: (res) => `Quedan ${res} litros en el bidón.`,
    icon: '💧',
  },
  {
    id: 'pollitos_granja_amarillos_marrones',
    problemTextTemplate: (n1, n2) => `En una granja hay ${n1} pollitos amarillos y ${n2} pollitos marrones. ¿Cuántos pollitos hay en total?`,
    operation: '+',
    data1Label: 'Pollitos amarillos', data1Unit: 'pollitos',
    data2Label: 'Pollitos marrones', data2Unit: 'pollitos',
    resultLabelTemplate: (res) => `Hay ${res} pollitos en total en la granja.`,
    icon: '🐤',
  },
  {
    id: 'juguetes_habitacion_junta',
    problemTextTemplate: (n1, n2) => `En tu habitación tienes ${n1} autitos y ${n2} muñecos. ¿Cuántos juguetes tienes en total?`,
    operation: '+',
    data1Label: 'Autitos', data1Unit: 'juguetes',
    data2Label: 'Muñecos', data2Unit: 'juguetes',
    resultLabelTemplate: (res) => `Tienes ${res} juguetes en total.`,
    icon: '🚗',
  },
  {
    id: 'bolitas_pierde_jardin',
    problemTextTemplate: (n1, n2) => `Tenías ${n1} bolitas y perdiste ${n2} jugando en el jardín. ¿Cuántas bolitas te quedan?`,
    operation: '-',
    data1Label: 'Bolitas tenías', data1Unit: 'bolitas',
    data2Label: 'Bolitas perdiste', data2Unit: 'bolitas',
    resultLabelTemplate: (res) => `Te quedan ${res} bolitas.`,
    icon: '🔵',
  },
  {
    id: 'cuentos_estante_compran',
    problemTextTemplate: (n1, n2) => `Había ${n1} cuentos en el estante. Mamá compró ${n2} cuentos nuevos. ¿Cuántos cuentos hay ahora?`,
    operation: '+',
    data1Label: 'Cuentos había', data1Unit: 'cuentos',
    data2Label: 'Cuentos nuevos', data2Unit: 'cuentos',
    resultLabelTemplate: (res) => `Ahora hay ${res} cuentos en el estante.`,
    icon: '📚',
  },
  {
    id: 'cartas_mazo_reparten',
    problemTextTemplate: (n1, n2) => `Un mazo tenía ${n1} cartas. Para jugar se repartieron ${n2} cartas. ¿Cuántas cartas quedaron en el mazo?`,
    operation: '-',
    data1Label: 'Cartas había', data1Unit: 'cartas',
    data2Label: 'Cartas repartidas', data2Unit: 'cartas',
    resultLabelTemplate: (res) => `Quedaron ${res} cartas en el mazo.`,
    icon: '♠️',
  },
  {
    id: 'mariposas_vuelan_juntas',
    problemTextTemplate: (n1, n2) => `En una flor había ${n1} mariposas. Llegaron ${n2} mariposas más. ¿Cuántas mariposas hay ahora?`,
    operation: '+',
    data1Label: 'Mariposas había', data1Unit: 'mariposas',
    data2Label: 'Mariposas llegaron', data2Unit: 'mariposas',
    resultLabelTemplate: (res) => `Ahora hay ${res} mariposas en la flor.`,
    icon: '🦋',
  },
  {
    id: 'dinosaurios_museo_prestan',
    problemTextTemplate: (n1, n2) => `El museo tenía ${n1} esqueletos de dinosaurios. Prestaron ${n2} a otra ciudad. ¿Cuántos quedaron?`,
    operation: '-',
    data1Label: 'Esqueletos tenía', data1Unit: 'esqueletos',
    data2Label: 'Esqueletos prestaron', data2Unit: 'esqueletos',
    resultLabelTemplate: (res) => `Quedaron ${res} esqueletos en el museo.`,
    icon: '🦴',
  },
  {
    id: 'helados_venden_kiosco',
    problemTextTemplate: (n1, n2) => `Un kiosco vendió ${n1} helados de frutilla y ${n2} helados de chocolate. ¿Cuántos helados vendió en total?`,
    operation: '+',
    data1Label: 'Helados frutilla', data1Unit: 'helados',
    data2Label: 'Helados chocolate', data2Unit: 'helados',
    resultLabelTemplate: (res) => `El kiosco vendió ${res} helados en total.`,
    icon: '🍦',
  },
  {
    id: 'facturas_panaderia_comen',
    problemTextTemplate: (n1, n2) => `En la panadería había ${n1} facturas. Los clientes compraron ${n2}. ¿Cuántas facturas quedaron?`,
    operation: '-',
    data1Label: 'Facturas había', data1Unit: 'facturas',
    data2Label: 'Facturas compraron', data2Unit: 'facturas',
    resultLabelTemplate: (res) => `Quedaron ${res} facturas.`,
    icon: '🥐',
  },
  {
    id: 'amigos_fiesta_llegan',
    problemTextTemplate: (n1, n2) => `Ya había ${n1} amigos en la fiesta. Luego llegaron ${n2} amigos más. ¿Cuántos amigos hay en total?`,
    operation: '+',
    data1Label: 'Amigos había', data1Unit: 'amigos',
    data2Label: 'Amigos llegaron', data2Unit: 'amigos',
    resultLabelTemplate: (res) => `Hay ${res} amigos en total en la fiesta.`,
    icon: '🎉',
  },
  {
    id: 'invitados_retiran_temprano',
    problemTextTemplate: (n1, n2) => `A la fiesta llegaron ${n1} invitados. Si ${n2} se retiraron temprano, ¿cuántos invitados quedaron?`,
    operation: '-',
    data1Label: 'Invitados llegaron', data1Unit: 'invitados',
    data2Label: 'Invitados retiraron', data2Unit: 'invitados',
    resultLabelTemplate: (res) => `Quedaron ${res} invitados en la fiesta.`,
    icon: '🥳',
  },
  {
    id: 'tomates_huerta_cosechan',
    problemTextTemplate: (n1, n2) => `Se cosecharon ${n1} tomates rojos y ${n2} tomates verdes de la huerta. ¿Cuántos tomates se cosecharon?`,
    operation: '+',
    data1Label: 'Tomates rojos', data1Unit: 'tomates',
    data2Label: 'Tomates verdes', data2Unit: 'tomates',
    resultLabelTemplate: (res) => `Se cosecharon ${res} tomates en total.`,
    icon: '🍅',
  },
  {
    id: 'zanahorias_conejo_come',
    problemTextTemplate: (n1, n2) => `Un conejo tenía ${n1} zanahorias. Se comió ${n2}. ¿Cuántas zanahorias le quedan?`,
    operation: '-',
    data1Label: 'Zanahorias tenía', data1Unit: 'zanahorias',
    data2Label: 'Zanahorias comió', data2Unit: 'zanahorias',
    resultLabelTemplate: (res) => `Al conejo le quedan ${res} zanahorias.`,
    icon: '🥕',
  },
  {
    id: 'estudiantes_biblioteca_entran',
    problemTextTemplate: (n1, n2) => `En la biblioteca había ${n1} estudiantes leyendo. Entraron ${n2} estudiantes más. ¿Cuántos hay ahora?`,
    operation: '+',
    data1Label: 'Estudiantes había', data1Unit: 'estudiantes',
    data2Label: 'Estudiantes entraron', data2Unit: 'estudiantes',
    resultLabelTemplate: (res) => `Ahora hay ${res} estudiantes en la biblioteca.`,
    icon: '🧑‍🎓',
  },
  {
    id: 'sillas_comedor_ocupan',
    problemTextTemplate: (n1, n2) => `Un comedor tiene ${n1} sillas. Si se ocuparon ${n2} sillas, ¿cuántas quedaron libres?`,
    operation: '-',
    data1Label: 'Sillas total', data1Unit: 'sillas',
    data2Label: 'Sillas ocupadas', data2Unit: 'sillas',
    resultLabelTemplate: (res) => `Quedaron ${res} sillas libres.`,
    icon: '🍽️',
  },
  {
    id: 'collares_hace_vende',
    problemTextTemplate: (n1, n2) => `Ana hizo ${n1} collares. Si vendió ${n2} collares en la feria, ¿cuántos le quedan?`,
    operation: '-',
    data1Label: 'Collares hizo', data1Unit: 'collares',
    data2Label: 'Collares vendió', data2Unit: 'collares',
    resultLabelTemplate: (res) => `A Ana le quedan ${res} collares.`,
    icon: '💎',
  },
  {
    id: 'pelotas_cancha_traen',
    problemTextTemplate: (n1, n2) => `Para jugar había ${n1} pelotas. El profesor trajo ${n2} pelotas más. ¿Cuántas pelotas hay ahora?`,
    operation: '+',
    data1Label: 'Pelotas había', data1Unit: 'pelotas',
    data2Label: 'Pelotas trajo', data2Unit: 'pelotas',
    resultLabelTemplate: (res) => `Ahora hay ${res} pelotas para jugar.`,
    icon: '🏀',
  },
  {
    id: 'vasos_agua_dia',
    problemTextTemplate: (n1, n2) => `Tomé ${n1} vasos de agua por la mañana y ${n2} por la tarde. ¿Cuántos vasos de agua tomé en el día?`,
    operation: '+',
    data1Label: 'Vasos mañana', data1Unit: 'vasos',
    data2Label: 'Vasos tarde', data2Unit: 'vasos',
    resultLabelTemplate: (res) => `Tomé ${res} vasos de agua en el día.`,
    icon: '💧',
  },
  {
    id: 'mensajes_celular_borra',
    problemTextTemplate: (n1, n2) => `Tenías ${n1} mensajes en tu celular. Borraste ${n2} mensajes viejos. ¿Cuántos mensajes te quedan?`,
    operation: '-',
    data1Label: 'Mensajes tenías', data1Unit: 'mensajes',
    data2Label: 'Mensajes borraste', data2Unit: 'mensajes',
    resultLabelTemplate: (res) => `Te quedan ${res} mensajes en el celular.`,
    icon: '📱',
  },
  {
    id: 'fotos_camara_saca',
    problemTextTemplate: (n1, n2) => `Con mi cámara saqué ${n1} fotos del paisaje y ${n2} fotos de animales. ¿Cuántas fotos saqué en total?`,
    operation: '+',
    data1Label: 'Fotos paisaje', data1Unit: 'fotos',
    data2Label: 'Fotos animales', data2Unit: 'fotos',
    resultLabelTemplate: (res) => `Saqué ${res} fotos en total.`,
    icon: '🏞️',
  },
  {
    id: 'abejas_panal_salen',
    problemTextTemplate: (n1, n2) => `En un panal había ${n1} abejas. Salieron ${n2} abejas a buscar polen. ¿Cuántas quedaron en el panal?`,
    operation: '-',
    data1Label: 'Abejas había', data1Unit: 'abejas',
    data2Label: 'Abejas salieron', data2Unit: 'abejas',
    resultLabelTemplate: (res) => `Quedaron ${res} abejas en el panal.`,
    icon: '🐝',
  },
  {
    id: 'barriletes_cielo_vuelan',
    problemTextTemplate: (n1, n2) => `En el cielo volaban ${n1} barriletes rojos. Se sumaron ${n2} barriletes azules. ¿Cuántos barriletes vuelan ahora?`,
    operation: '+',
    data1Label: 'Barriletes rojos', data1Unit: 'barriletes',
    data2Label: 'Barriletes azules', data2Unit: 'barriletes',
    resultLabelTemplate: (res) => `Ahora vuelan ${res} barriletes.`,
    icon: '🪁',
  },
  {
    id: 'hojas_arbol_caen_otono',
    problemTextTemplate: (n1, n2) => `Un árbol tenía ${n1} hojas. En otoño se cayeron ${n2} hojas. ¿Cuántas hojas le quedaron aproximadamente?`,
    operation: '-',
    data1Label: 'Hojas tenía', data1Unit: 'hojas',
    data2Label: 'Hojas cayeron', data2Unit: 'hojas',
    resultLabelTemplate: (res) => `Al árbol le quedaron ${res} hojas aproximadamente.`,
    icon: '🍂',
  },
  {
    id: 'km_viaje_familia',
    problemTextTemplate: (n1, n2) => `Una familia viajó ${n1} km el primer día y ${n2} km el segundo día. ¿Cuántos km viajó en total?`,
    operation: '+',
    data1Label: 'Km día 1', data1Unit: 'km',
    data2Label: 'Km día 2', data2Unit: 'km',
    resultLabelTemplate: (res) => `La familia viajó ${res} km en total.`,
    icon: '🗺️',
  },
  {
    id: 'dinero_ahorrado_gasta_libro',
    problemTextTemplate: (n1, n2) => `Tenías ${n1} pesos ahorrados. Gastaste ${n2} pesos en un libro. ¿Cuánto dinero te queda?`,
    operation: '-',
    data1Label: 'Dinero ahorrado', data1Unit: 'pesos',
    data2Label: 'Dinero gastado', data2Unit: 'pesos',
    resultLabelTemplate: (res) => `Te quedan ${res} pesos.`,
    icon: '💸',
  },
  {
    id: 'manzanas_cosecha_vende',
    problemTextTemplate: (n1, n2) => `Se cosecharon ${n1} manzanas. Si se vendieron ${n2} manzanas, ¿cuántas quedaron sin vender?`,
    operation: '-',
    data1Label: 'Manzanas cosechadas', data1Unit: 'manzanas',
    data2Label: 'Manzanas vendidas', data2Unit: 'manzanas',
    resultLabelTemplate: (res) => `Quedaron ${res} manzanas sin vender.`,
    icon: '🍏',
  },
];
